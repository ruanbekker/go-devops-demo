apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-devops-demo
  namespace: default
  labels:
    app.kubernetes.io/instance: go-devops-demo
    app.kubernetes.io/name: app
    app.kubernetes.io/version: 1.0.0
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: go-devops-demo
      app.kubernetes.io/name: app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: go-devops-demo
        app.kubernetes.io/name: app
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
      - name: app
        image: "ruanbekker/go-devops-demo:1.0.0"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: DB_TYPE
          value: sqlite
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/health/ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/health/ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 32Mi
        securityContext: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
